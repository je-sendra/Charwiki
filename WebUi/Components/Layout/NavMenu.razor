@inject IUserService UserService
@inject UserTokenService UserTokenService


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Charwiki</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Sets Loomipedia
            </NavLink>
        </div>

        @if (_isAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/submit-set">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Submit Set
                </NavLink>
            </div>
        }

        @if (_user != null)
        {
            @if (_user.Roles.HasFlag(UserRoles.Admin) || _user.Roles.HasFlag(UserRoles.Moderator))
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/unapproved-sets">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Unapproved Sets
                    </NavLink>
                </div>
            }

        }

        <div class="nav-item px-3" style="display: none;">
            <NavLink class="nav-link" href="#">
                <span class="bi" aria-hidden="true"></span> Damage Calc
            </NavLink>
        </div>

        <div class="nav-item px-3" style="display: none;">
            <NavLink class="nav-link" href="#">
                <span class="bi" aria-hidden="true"></span> Match Sheet
            </NavLink>
        </div>

        <div class="nav-item px-3" style="display: none;">
            <NavLink class="nav-link" href="#">
                <span class="bi" aria-hidden="true"></span> Team Builder
            </NavLink>
        </div>
    </nav>
</div>

@code {

    private bool _isAuthenticated;
    private User? _user;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isAuthenticated = await UserTokenService.IsAuthenticatedAsync();
            if (_isAuthenticated)
            {
                string? token = await UserTokenService.GetAuthTokenAsync();
                _user = await UserService.GetMeAsync(token!);
            }

            StateHasChanged();
        }
    }
}