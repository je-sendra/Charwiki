@page "/"

<PageTitle>Charwiki</PageTitle>

<div class="container-fluid mb-3">

    <div class="row mb-3">
        <div class="col-md-2">
            <label for="loomianSelect" class="form-label">Loomian</label>
            <InputSelect @bind-Value="SelectedLoomianId" @bind-Value:after="UpdateLoomianSetsAsync" id="loomianSelect"
                class="form-select">
                <option value="" selected>Select a Loomian</option>
                @foreach (LoomianResponseDto loomian in CachedDataLists.Loomians.OrderBy(l => l.Name))
                {
                    <option value="@loomian.Id">@loomian.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col-md-2">
            <label for="abilitySelect" class="form-label">Ability</label>
            <InputSelect @bind-Value="SelectedAbilityId" @bind-Value:after="UpdateLoomianSetsAsync" id="abilitySelect"
                class="form-select">
                <option value="" selected>Select an Ability</option>
                @foreach (LoomianAbilityResponseDto ability in CachedDataLists.Abilities.OrderBy(a => a.Name))
                {
                    <option value="@ability.Id">@ability.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col-md-2">
            <label for="itemSelect" class="form-label">Item</label>
            <InputSelect @bind-Value="SelectedItemId" @bind-Value:after="UpdateLoomianSetsAsync" id="itemSelect"
                class="form-select">
                <option value="" selected>Select an Item</option>
                @foreach (LoomianItemResponseDto item in CachedDataLists.Items.OrderBy(i => i.Name))
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col-md-2">
            <label for="moveSelect" class="form-label">Move</label>
            <InputSelect @bind-Value="SelectedMoveId" @bind-Value:after="UpdateLoomianSetsAsync" id="moveSelect"
                class="form-select">
                <option value="" selected>Select a Move</option>
                @foreach (LoomianMoveResponseDto move in CachedDataLists.Moves.OrderBy(m => m.Name))
                {
                    <option value="@move.Id">@move.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col-md-2">
            <label for="gameVersionSelect" class="form-label">Game Version</label>
            <InputSelect @bind-Value="SelectedGameVersionInfoId" @bind-Value:after="UpdateLoomianSetsAsync"
                id="gameVersionSelect" class="form-select">
                <option value="" selected>Select a Game Version</option>
                @foreach (GameVersionInfoResponseDto gameVersion in CachedDataLists.GameVersionInfos.OrderBy(g => g.VersionCode))
                {
                    <option value="@gameVersion.Id">@gameVersion.VersionCode - @gameVersion.VersionTitle</option>
                }
            </InputSelect>
        </div>

        <div class="col-md-2">
            <label for="tagsSelect" class="form-label">Tag</label>
            <InputSelect @bind-Value="SelectedTagId" @bind-Value:after="UpdateLoomianSetsAsync" id="tagsSelect"
                class="form-select" multiple>
                <option value="" selected>Select a Tag</option>
                @foreach (TagResponseDto tag in CachedDataLists.Tags.OrderBy(t => t.Name))
                {
                    <option value="@tag.Id">@tag.Name</option>
                }
            </InputSelect>
        </div>

    </div>

    <div class="row row-gap-3">
        @foreach (LoomianSetResponseDto currentSet in LoomianSets)
        {
            <div class="col-sm-12 col-md-6 col-lg-4">
                <SetCard Set="@currentSet" />
            </div>
        }
    </div>

    <div class="row mt-3">
        <div class="col text-center">
            @if (HasMoreSets)
            {
                <button class="btn btn-primary" @onclick="LoadMoreSets">Load More</button>
            }
            else
            {
                <p>No more sets to load.</p>
            }
        </div>
    </div>
</div>
