// <auto-generated />
using System;
using System.Collections.Generic;
using Charwiki.WebApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Charwiki.WebApi.Migrations
{
    [DbContext(typeof(CharwikiDbContext))]
    [Migration("20250702102602_AddShortDescriptionToSets")]
    partial class AddShortDescriptionToSets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Charwiki.ClassLib.Models.GameVersionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("GameEdition")
                        .HasColumnType("integer");

                    b.Property<string>("VersionCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VersionTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameVersionInfos");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.Loomian", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type1")
                        .HasColumnType("integer");

                    b.Property<int?>("Type2")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Loomians");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.LoomianAbility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LoomianAbilities");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.LoomianItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LoomianItems");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.LoomianMove", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LoomianMoves");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.LoomianSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ApprovalTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<Guid>("GameVersionInfoId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LoomianAbilityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LoomianId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Move1Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Move2Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Move3Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Move4Id")
                        .HasColumnType("uuid");

                    b.Property<string>("OtherOptions")
                        .HasColumnType("text");

                    b.Property<Guid?>("PersonalityModifiersId")
                        .HasColumnType("uuid");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Strategy")
                        .HasColumnType("text");

                    b.Property<List<string>>("Strengths")
                        .HasColumnType("text[]");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TrainingPointsId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UniquePointsId")
                        .HasColumnType("uuid");

                    b.Property<List<string>>("Weaknesses")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("GameVersionInfoId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LoomianAbilityId");

                    b.HasIndex("LoomianId");

                    b.HasIndex("Move1Id");

                    b.HasIndex("Move2Id");

                    b.HasIndex("Move3Id");

                    b.HasIndex("Move4Id");

                    b.HasIndex("PersonalityModifiersId");

                    b.HasIndex("TrainingPointsId");

                    b.HasIndex("UniquePointsId");

                    b.ToTable("LoomianSets");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.StatsSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Energy")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("MeleeAttack")
                        .HasColumnType("integer");

                    b.Property<int>("MeleeDefense")
                        .HasColumnType("integer");

                    b.Property<int>("RangedAttack")
                        .HasColumnType("integer");

                    b.Property<int>("RangedDefense")
                        .HasColumnType("integer");

                    b.Property<int>("Speed")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StatsSets");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<int>("PasswordHashVersion")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("text");

                    b.Property<int>("Roles")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.UserToLoomianSetStarRating", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LoomianSetId")
                        .HasColumnType("uuid");

                    b.Property<int>("StarRating")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "LoomianSetId");

                    b.HasIndex("LoomianSetId");

                    b.ToTable("UserToLoomianSetStarRatings");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.LoomianSet", b =>
                {
                    b.HasOne("Charwiki.ClassLib.Models.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Charwiki.ClassLib.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Charwiki.ClassLib.Models.GameVersionInfo", "GameVersionInfo")
                        .WithMany()
                        .HasForeignKey("GameVersionInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Charwiki.ClassLib.Models.LoomianItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("Charwiki.ClassLib.Models.LoomianAbility", "Ability")
                        .WithMany()
                        .HasForeignKey("LoomianAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Charwiki.ClassLib.Models.Loomian", "Loomian")
                        .WithMany()
                        .HasForeignKey("LoomianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Charwiki.ClassLib.Models.LoomianMove", "Move1")
                        .WithMany()
                        .HasForeignKey("Move1Id");

                    b.HasOne("Charwiki.ClassLib.Models.LoomianMove", "Move2")
                        .WithMany()
                        .HasForeignKey("Move2Id");

                    b.HasOne("Charwiki.ClassLib.Models.LoomianMove", "Move3")
                        .WithMany()
                        .HasForeignKey("Move3Id");

                    b.HasOne("Charwiki.ClassLib.Models.LoomianMove", "Move4")
                        .WithMany()
                        .HasForeignKey("Move4Id");

                    b.HasOne("Charwiki.ClassLib.Models.StatsSet", "PersonalityModifiers")
                        .WithMany()
                        .HasForeignKey("PersonalityModifiersId");

                    b.HasOne("Charwiki.ClassLib.Models.StatsSet", "TrainingPoints")
                        .WithMany()
                        .HasForeignKey("TrainingPointsId");

                    b.HasOne("Charwiki.ClassLib.Models.StatsSet", "UniquePoints")
                        .WithMany()
                        .HasForeignKey("UniquePointsId");

                    b.Navigation("Ability");

                    b.Navigation("Approver");

                    b.Navigation("Creator");

                    b.Navigation("GameVersionInfo");

                    b.Navigation("Item");

                    b.Navigation("Loomian");

                    b.Navigation("Move1");

                    b.Navigation("Move2");

                    b.Navigation("Move3");

                    b.Navigation("Move4");

                    b.Navigation("PersonalityModifiers");

                    b.Navigation("TrainingPoints");

                    b.Navigation("UniquePoints");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.UserToLoomianSetStarRating", b =>
                {
                    b.HasOne("Charwiki.ClassLib.Models.LoomianSet", null)
                        .WithMany("UserToLoomianSetStarRatings")
                        .HasForeignKey("LoomianSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Charwiki.ClassLib.Models.User", null)
                        .WithMany("LoomianSetStarRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.LoomianSet", b =>
                {
                    b.Navigation("UserToLoomianSetStarRatings");
                });

            modelBuilder.Entity("Charwiki.ClassLib.Models.User", b =>
                {
                    b.Navigation("LoomianSetStarRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
